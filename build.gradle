buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.5.RELEASE'
        junit5 = "5.1.0"
        junit5_plugin = "1.1.0"
    }
    repositories {
        mavenCentral()

        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit5_plugin"
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {

    jcenter()
    mavenCentral()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:$junit5",
            "org.junit.jupiter:junit-jupiter-params:$junit5"
    )
    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:$junit5",
            "org.junit.platform:junit-platform-launcher:$junit5_plugin",
            "org.junit.platform:junit-platform-runner:$junit5_plugin",
    )
}
